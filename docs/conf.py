# -*- coding: utf-8 -*-
#
# PixelPipes documentation build configuration file

import os
import sys
import subprocess

sys.path.insert(0, os.path.abspath('..'))
sys.path.insert(0, os.path.abspath('.'))

# -- General configuration ------------------------------------------------

from pixelpipes import __version__

extensions = ['autoapi.extension', 'link_roles', 'nodedoc', 'breathe']

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

from recommonmark.parser import CommonMarkParser

source_parsers = {
    '.md': CommonMarkParser,
}

source_suffix = ['.rst', '.md']
source_encoding = 'utf-8'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = u'PixelPipes'
copyright = u'2024, Luka Cehovin Zajc'
author = u'Luka Cehovin Zajc'

version = __version__

# The full version, including alpha/beta/rc tags.
release = version

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
# language = None

exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store', '**/*setup*']

pygments_style = 'sphinx'

todo_include_todos = False

html_theme = 'sphinx_rtd_theme'

html_static_path = [] # html_static_path = ['_static']

htmlhelp_basename = 'pixelpipesdocs'

# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
     # The paper size ('letterpaper' or 'a4paper').
     #
     # 'papersize': 'letterpaper',

     # The font size ('10pt', '11pt' or '12pt').
     #
     # 'pointsize': '10pt',

     # Additional stuff for the LaTeX preamble.
     #
     # 'preamble': '',

     # Latex figure (float) alignment
     #
     # 'figure_align': 'htbp',
}

latex_documents = [
    (master_doc, 'PixelPipes.tex', u'PixelPipes Documentation',
     u'Luka Cehovin Zajc', 'manual'),
]

man_pages = [
    (master_doc, 'pixelpipes', u'PixelPipes Documentation',
     [author], 1)
]

texinfo_documents = [
    (master_doc, 'PixelPipes', u'PixelPipes Documentation',
     author, 'PixelPipes', 'One line description of project.',
     'Miscellaneous'),
]

autoapi_dirs = ["../pixelpipes"]

autoapi_generate_api_docs = False

autoapi_keep_files = True

breathe_projects = {"pixelpipes": "_build/doxygen/xml/"}

breathe_default_project = "pixelpipes"

cpp_index_common_prefix = ['pixelpipes::']

def setup(app):
    app.connect("builder-inited", generate_doxygen_xml)

def generate_doxygen_xml(app):
    """Run the doxygen make commands if we're on the ReadTheDocs server"""

    read_the_docs_build = os.environ.get('READTHEDOCS', None) == 'True'

    if read_the_docs_build:

        try:
            retcode = subprocess.call("doxygen", shell=True)
            if retcode < 0:
                sys.stderr.write("doxygen terminated by signal %s" % (-retcode))
        except OSError as e:
            sys.stderr.write("doxygen execution failed: %s" % e)
